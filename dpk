#!/bin/bash

# DISPAK
#
# Simple tool to manage code and servers/services easily.
#
# Source code and documentation: https://github.com/Amaury/Dispak
#
# Â© 2017, Amaury Bouchard <amaury@amaury.net>
#
# Licensed under the terms of the MIT license (see LICENSE file).

# ########## GLOBAL VARIABLES (readable by rules' code) ##########

# Path to the Dispak installation root directory.
# @type	string
DPK_ROOT="$(cd "$(dirname "$(readlink "${BASH_SOURCE[0]}" || echo "${BASH_SOURCE[0]}")")" && pwd)"

# Name of the Dispak executable script on the command line.
# @type	string
DPK_EXEC=`basename $0`

# List of options given on the command-line.
declare -A DPK_OPTIONS

# Name of the asked command to execute
COMMAND=$1

# ########## INTERNAL VARIABLES ##########

# List of rules.
# @type	array
declare -A _DPK_RULES

# List of mandatory command-line parameters, indexed by rule.
declare -A _DPK_RULES_MANDATORY_PARAMS

# List of optional command-line parameters, indexed by rule.
declare -A _DPK_RULES_OPTIONAL_PARAMS

# ########## INCLUDE SOURCE FILES ##########
# functions files
. "$DPK_ROOT/lib/utils.sh"
. "$DPK_ROOT/lib/rules.sh"

# import rules
for FILE in $DPK_ROOT/rules/*.sh ; do
	RULE_NAME=""
	RULE_MANDATORY_PARAMS=""
	RULE_OPTIONAL_PARAMS=""
	. $FILE
	if [ "$RULE_NAME" = "" ]; then
		continue
	fi
	_dpk_rule_add $RULE_NAME
	_dpk_rule_mandatory_params $RULE_NAME $RULE_MANDATORY_PARAMS
	_dpk_rule_optional_params $RULE_NAME $RULE_OPTIONAL_PARAMS
done

# ########## MAIN EXECUTION ##########
# no option given: show help and quit
if [ "$COMMAND" = "" ] || [ "$COMMAND" = "h" ] || [ "$COMMAND" = "help" ]; then
	rule_help_exec
	exit 0
fi
# fetch command-line options
shift
while getopts "h-:" OPTCHAR; do
	case "$OPTCHAR" in
		"-")
			KEY=$(echo $OPTARG | cut -d"=" -f 1)
			VALUE=${OPTARG#*=}
			if [ "$VALUE" = "" ]; then
				VALUE=1
			fi
			DPK_OPTIONS[$KEY]="$VALUE"
			;;
		"h")
			rule_help_exec
			exit 1
			;;
		*)
			abort "$(ansi red)Bad command line option '-$OPTCHAR'.$(ansi reset)"
			;;
	esac
done
# check if the asked command is known
if [ "${_DPK_RULES[$COMMAND]}" = "" ]; then
	abort "$(ansi red)Unknown command $(ansi reset)'$COMMAND'$(ansi red).$(ansi reset)"
fi
# check if all mandatory options are given
for _OPT in ${_DPK_RULES_MANDATORY_PARAMS[$COMMAND]}; do
	if [ "${DPK_OPTIONS[$_OPT]}" = "" ]; then
		abort "$(ansi red)Mising parameter $(ansi reset)--$i_OPT$(ansi red).$(ansi reset)"
	fi
done
# check if extraneous parameters are given
for _OPT in "${!DPK_OPTIONS[@]}"; do
	FOUND=0
	for _KEY in ${_DPK_RULES_MANDATORY_PARAMS[$COMMAND]} ${_DPK_RULES_OPTIONAL_PARAMS[$COMMAND]}; do
		if [ "$_KEY" = "$_OPT" ]; then
			FOUND=1
			break;
		fi
	done
	if [ $FOUND -eq 0 ]; then
		abort "$(ansi red)Extraneous parameter $(ansi reset)--$_OPT$(ansi red).$(ansi reset)"
	fi
done

# ########## EXECUTION ##########
EXEC_FUNCTION="rule_${COMMAND}_exec"
$EXEC_FUNCTION
success

